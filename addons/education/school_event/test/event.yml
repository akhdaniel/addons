-
    In order to check the Event module in OpenERP.
-
    create Event paramater.
-
    !record {model: 'school.event.parameter', id: event_paramater_0}:
        name: 'run'
-  
    I Create the one event and give event title "cricket".
-
    !record {model: 'school.event', id: event_cricket_0}:
        name: 'cricket'
        start_date: '2011-08-02'
        end_date: '2011-08-20'
        last_reg_date: '2011-08-15'
        parameter_id: event_paramater_0
        contact_per_id: school.demo_student_student_6
        supervisor_id: school.demo_student_student_6
        maximum_participants: 50
-
    Do one registration of the participant 
-
    !record {model: 'school.event.registration', id: event_registration_0}:
        name: event_cricket_0
        part_name_id: school.demo_student_student_1
        state: draft
        reg_date: '2011-08-13'
-
    Do one entry of the event.participant 
-
    !record {model: 'school.event.participant', id: event_participant_0}:
        name: school.demo_student_student_2
        event_id: event_cricket_0
        stu_pid: '123-456-789'
        win_parameter_id: event_paramater_0
        sequence: 1
        score: 1
-
    create event Participant.
-
    !record {model: 'school.event', id: event_cricket_0}:
        part_ids: ['event_participant_0']
-
    I confirm the Event registration.
-
    !python {model: schoool.event.registration}: |
     self.regi_confirm(cr,uid,[ref('event_registration_0')])
-
    I cancel the Event registration.
-
    !python {model: school.event.registration}: |
     self.regi_cancel(cr,uid,[ref('event_registration_0')])
-
    Call Search mathod in student.student
-
    !python {model: student.student}: |
     self.search(cr, uid,[],{},{},{},{"lang": 'en_US', "name":
      1, "tz": False},{})
-
    Call Search mathod in student.student with context={}
-
    !python {model: student.student}: |
     self.search(cr, uid,[])
-
    Call Search mathod in school.event
-
    !python {model: school.event}: |
     self.search(cr, uid,[],{},{},{},{"lang": 'en_US', "part_name_id":
      1, "tz": False},{})
-
    Call Search mathod in school.event with context={}
-
    !python {model: school.event}: |
     self.search(cr, uid,[])
-
    do the state of event open.
-
    !python {model: school.event}: |
     self.event_open(cr, uid, [ref("event_cricket_0")], {"lang": 'en_US', "active_model":
      "school.event", "tz": False
      })
-
    do the state of event close.
-
    !python {model: school.event}: |
     self.event_close(cr, uid, [ref("event_cricket_0")], {"lang": 'en_US', "active_model":
      "school.event", "tz": False
      })
-
    do the state of event draft.
-
    !python {model: school.event}: |
     self.event_draft(cr, uid, [ref("event_cricket_0")], {"lang": 'en_US', "active_model":
      "school.event", "tz": False
      })
-
    do the state of event cancel.
-
    !python {model: school.event}: |
     self.event_cancel(cr, uid, [ref("event_cricket_0")], {"lang": 'en_US', "active_model":
      "school.event", "tz": False
      })
-
