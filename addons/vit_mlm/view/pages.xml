<openerp>
	<data>
		<template id="website.tree" name="Homepage" page="True">
			<t t-call="website.layout">
				<t t-set="title">Member Tree</t>
				<div class="oe_structure"> 
					<div class="container">
						<h1>Member Tree</h1>
						<!-- load the d3.js library -->	
						<script src="http://d3js.org/d3.v3.min.js"></script>
						<script>
							var treeData = [
	                        <t t-foreach="members" t-as="member">
							  {
                        		 "name":"<t t-esc="member.name"/>",
                        		 "parent":"null",
                        		 "children":[]
							  },
	                        </t>
							];


							var margin = {top: 40, right: 120, bottom: 20, left: 120},
								width = 960 - margin.right - margin.left,
								height = 500 - margin.top - margin.bottom;
								
							var i = 0,
								duration = 750,
								root;

							var tree = d3.layout.tree()
								.size([height, width]);

							var diagonal = d3.svg.diagonal()
								.projection(function(d) { return [d.x, d.y]; });

							var svg = d3.select("main").append("svg")
								.attr("width", width + margin.right + margin.left)
								.attr("height", height + margin.top + margin.bottom)
								.append("g")
								.attr("transform", "translate(" + margin.left + "," + margin.top + ")");

							root = treeData[0];
							update(root);


							function update(source) {

								// Compute the new tree layout.
								// node adalah object tree node lengkap: x, y, x0,y0, depth, id, parent, name
								var nodes = tree.nodes(root).reverse(),
											links = tree.links(nodes);

								// Normalize for fixed-depth.
								nodes.forEach(function(d) { d.y = d.depth * 80; });

								// Update the nodes
								var node = svg.selectAll("g.node")
										.data(nodes, function(d) { return d.id || (d.id = ++i); });

								// Enter any new nodes at the parent's previous position.
								var nodeEnter = node.enter().append("g")
										.attr("class", "node")
										.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; })
										.on("click", click);

								nodeEnter.append("circle")
										.attr("r", 1e-6)
										.style("fill", function(d) { return d._children ? "lightsteelblue" : "#fff"; });

								nodeEnter.append("text")
										.attr("x", function(d) { return d.children || d._children ? -10 : 10; })
										.attr("dy", ".35em")
										.attr("text-anchor", function(d) { return d.children || d._children ? "end" : "start"; })
										.text(function(d) { return d.name; })
										.style("fill-opacity", 1e-6);

								// Transition nodes to their new position.
								var nodeUpdate = node.transition()
										.duration(duration)
										.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

								nodeUpdate.select("circle")
										.attr("r", 4.5)
										.style("fill", function(d) { return d._children ? "lightsteelblue" : "#fff"; });

								nodeUpdate.select("text")
										.style("fill-opacity", 1);

								// Transition exiting nodes to the parent's new position.
								var nodeExit = node.exit().transition()
										.duration(duration)
										.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; })
										.remove();

								nodeExit.select("circle")
										.attr("r", 1e-6);

								nodeExit.select("text")
										.style("fill-opacity", 1e-6);

								// Update the linksâ€¦
								var link = svg.selectAll("path.link")
										.data(links, function(d) { return d.target.id; });

								// Enter any new links at the parent's previous position.
								link.enter().insert("path", "g")
										.attr("class", "link")
										.attr("d", function(d) {
											var o = {x: source.x0, y: source.y0};
											return diagonal({source: o, target: o});
										});

								// Transition links to their new position.
								link.transition()
										.duration(duration)
										.attr("d", diagonal);

								// Transition exiting nodes to the parent's new position.
								link.exit().transition()
										.duration(duration)
										.attr("d", function(d) {
											var o = {x: source.x, y: source.y};
											return diagonal({source: o, target: o});
										})
										.remove();

								// Stash the old positions for transition.
								nodes.forEach(function(d) {
									d.x0 = d.x;
									d.y0 = d.y;
								});
							}

							// Toggle children on click.
							function click(d) {
								if (d.children) {
									d._children = d.children;
									d.children = null;
								} else {
									d.children = d._children;
									d._children = null;
								}
								update(d);


							/*	$.getJSON(addthese.json, function(addTheseJSON) {
								    var newnodes = tree.nodes(addTheseJSON.children).reverse();
								    d.children = newnodes[0];
								    update(d);
								});	
							*/
							}
						</script>
					</div>
				</div>
			</t>
		</template>

		<template id="website.member_list" name="Member List" page="True">
            <t t-call="website.layout">
                <t t-set="title">Member List</t>
                <div class="oe_structure">
                    <div class="container">
                        <t t-foreach="members" t-as="member">
                            <h1>
                            	<a t-attf-href="/mlm/member/view/{{ slug(member) }}">
                            		 <t t-esc="member.name"/>
                            	</a>
                            </h1>
                            
                            <p>
                    			Member ID: <t t-esc="member.code"/><br/>
                    			Upline ID: <div t-field="member.parent_id"/><br/>
                    			Sponsor ID: <div t-field="member.sponsor_id"/><br/>
                    			Address: <t t-esc="member.street"/>
                    			<t t-esc="member.street2"/>
                    			<t t-esc="member.city"/>
                    			<div t-field="member.country_id"/>
                    		</p>

                            <p>
                    			Phone: <t t-esc="member.street"/><br/>
                    			Email: <t t-esc="member.email"/><br/>
                    			BBM: <t t-esc="member.bbm"/><br/>
                    		</p>
                        </t>
                    </div>
                </div>
            </t>			
		</template>

		<template id="website.member_view" name="Member View" page="True">
			<t t-call="website.layout">
                <t t-set="title">Member View</t>
                <div class="oe_structure"/>
                <div class="oe_structure">
                    <div class="container">
                        <h1 t-field="member.name"/>
                        <form>
				            <div t-attf-class="form-group">
				                <label class="col-md-3 col-sm-4 control-label" for="code">Member ID</label>

				                <div class="col-md-7 col-sm-8">
				                    <div t-field="member.code"/>
				                </div>
				            </div>

				            <div t-attf-class="form-group">
				                <label class="col-md-3 col-sm-4 control-label" for="parent_id">Upline ID</label>
				                <div class="col-md-7 col-sm-8">
				                    <div t-field="member.parent_id"/>
				                </div>
				            </div>


				            <div t-attf-class="form-group">
				                <label class="col-md-3 col-sm-4 control-label" for="sponsor_id">Sponsor ID</label>
				                <div class="col-md-7 col-sm-8">
				                    <div t-field="member.sponsor_id"/>
				                </div>
				            </div>
				        </form>

						<iframe t-attf-src="http://mlm.vitraining.com/mlm/partner/view/{{ member.id }}" style="width:100%; height:500px"/>
                        
                    </div>
                </div>
                <div class="oe_structure"/>
            </t>			
		</template>	

		<template id="website.member_create" name="Create Member" page="True">
            <t t-call="website.layout">
                <t t-set="title">Create New Member</t>
                <div class="oe_structure">
                    <div class="container">
                        <h1 t-field="parent.name"/>
						<iframe t-attf-src="http://mlm.vitraining.com/mlm/partner/create/parent_id={{ parent.id }}" style="width:100%; height:500px"/>
                    </div>
                </div>
            </t>			
		</template>
		<record id="member_menu" model="website.menu">
			<field name="name">Member</field>
			<field name="url">/mlm/member/list</field>
			<field name="parent_id" ref="website.main_menu"/>
			<field name="sequence" type="int">20</field>
		</record>		

		<template id="dummy_theme_asset" name="website assete for Dummy theme" inherit_id="website.theme">
			<xpath expr="." position="inside">
					<link rel="stylesheet" href="/vit_mlm/static/style/my.css"/>
			</xpath>
		</template>	





	</data>


</openerp>